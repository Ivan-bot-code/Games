import random
import time
from colorama import Fore, Back, Style, init

init(autoreset=True)

# –°–∏–º–≤–æ–ª—ã –¥–ª—è —Å–ª–æ—Ç–æ–≤
SYMBOLS = {
    '7': Fore.RED + 'üî¥',
    'BAR': Fore.GREEN + 'üçé',
    'BELL': Fore.YELLOW + 'üîî',
    'DIAMOND': Fore.CYAN + 'üíé',
    'CHERRY': Fore.MAGENTA + 'üçí',
    'LEMON': Fore.LIGHTYELLOW_EX + 'üçã'
}


class OneArmBandit:
    def __init__(self, user):
        self.user = user
        self.bet = 0
        self.selected_symbol = None
        self.reels = []
        self.result_line = []
        self.game_result = None
        self.payouts = {
            '4_of_a_kind': 3,
            '4_selected': 4,
            '3_selected': 2
        }

    def start_game(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã"""
        print(Fore.CYAN + "\n=== ONE-ARM BANDIT ===")
        self._show_rules()

        while True:
            try:
                if not self._place_bet():
                    return  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é

                self._select_symbol()
                self._spin_reels()
                self._play_round()
                self._finish_game()

                if self.user.money <= 0:
                    print(Fore.RED + "\n–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –¥–µ–Ω—å–≥–∏!")
                    return

                choice = input(Fore.CYAN + "\n–°—ã–≥—Ä–∞—Ç—å –µ—â–µ? (y/n): " + Style.RESET_ALL).lower()
                if choice != 'y':
                    return

            except KeyboardInterrupt:
                print(Fore.YELLOW + "\n–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é...")
                return

    def _show_rules(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã"""
        print(Fore.YELLOW + "\n–ü—Ä–∞–≤–∏–ª–∞:")
        print("- –í—ã –¥–µ–ª–∞–µ—Ç–µ —Å—Ç–∞–≤–∫—É –∏ –≤—ã–±–∏—Ä–∞–µ—Ç–µ —Ñ–∏–≥—É—Ä—É")
        print(f"- 4 –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Ñ–∏–≥—É—Ä—ã –≤ —Ä—è–¥: {Fore.GREEN}x{self.payouts['4_of_a_kind']} —Å—Ç–∞–≤–∫–∏")
        print(f"- 4 –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã –≤ —Ä—è–¥: {Fore.GREEN}x{self.payouts['4_selected']} —Å—Ç–∞–≤–∫–∏")
        print(f"- 3 –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã (–≤ –ª—é–±–æ–º –ø–æ—Ä—è–¥–∫–µ): {Fore.GREEN}x{self.payouts['3_selected']} —Å—Ç–∞–≤–∫–∏")
        print(Fore.RED + "- –í–æ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö: –ø—Ä–æ–∏–≥—Ä—ã—à")
        print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã:")
        for name, symbol in SYMBOLS.items():
            print(f"{symbol} - {name}")

    def _place_bet(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞–≤–∫–∏ –∏–≥—Ä–æ–∫–∞"""
        while True:
            print(Fore.MAGENTA + f"\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${self.user.money:,}")
            bet_input = input(Fore.CYAN + f"–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–≤–∫—É (1-{self.user.money}) –∏–ª–∏ 0 –¥–ª—è –≤—ã—Ö–æ–¥–∞: " + Style.RESET_ALL).strip()

            if bet_input == '0':
                print(Fore.YELLOW + "\n–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é...")
                return False

            if not bet_input.isdigit():
                print(Fore.RED + "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")
                continue

            bet = int(bet_input)
            if bet < 1:
                print(Fore.RED + "–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π!")
                continue
            if bet > self.user.money:
                print(Fore.RED + "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
                continue

            self.bet = bet
            return True

    def _select_symbol(self):
        """–í—ã–±–æ—Ä —Å–∏–º–≤–æ–ª–∞ –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –≤—ã–ø–ª–∞—Ç"""
        print(Fore.CYAN + "\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª:")
        symbols_list = list(SYMBOLS.items())

        for i, (name, symbol) in enumerate(symbols_list, 1):
            print(f"{i}. {symbol} {name}")

        while True:
            choice = input(Fore.GREEN + "> " + Style.RESET_ALL).strip()
            if not choice.isdigit():
                print(Fore.RED + "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")
                continue

            choice_num = int(choice)
            if 1 <= choice_num <= len(symbols_list):
                self.selected_symbol = symbols_list[choice_num - 1][0]
                return
            print(Fore.RED + f"–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ {len(symbols_list)}")

    def _spin_reels(self):
        """–í—Ä–∞—â–µ–Ω–∏–µ –±–∞—Ä–∞–±–∞–Ω–æ–≤ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π"""
        self.reels = []
        all_symbols = list(SYMBOLS.keys())

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –±–∞—Ä–∞–±–∞–Ω–æ–≤
        final_reels = []
        for _ in range(4):
            reel = [random.choice(all_symbols) for _ in range(3)]
            final_reels.append(reel)

        # –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è
        print("\n" + "=" * 50)
        print(Fore.MAGENTA + "=== –í–†–ê–©–ï–ù–ò–ï ===")

        for spin in range(10):  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤ –∞–Ω–∏–º–∞—Ü–∏–∏
            temp_reels = []
            for i in range(4):
                # –ù–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —à–∞–≥–∞—Ö –ø—Ä–∏–±–ª–∏–∂–∞–µ–º—Å—è –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
                reel = final_reels[i] if spin > 7 else [random.choice(all_symbols) for _ in range(3)]
                temp_reels.append(reel)

            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
            for line in range(3):
                for reel in temp_reels:
                    symbol = reel[line]
                    color = Fore.YELLOW if symbol == self.selected_symbol else Fore.WHITE
                    print(color + SYMBOLS[symbol], end="  ")
                print()

            time.sleep(0.1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
            if spin < 9:
                print("\033[F" * 4)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—É—Ä—Å–æ—Ä –≤–≤–µ—Ä—Ö –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–∞–¥—Ä–∞

        self.reels = final_reels
        self.result_line = [reel[1] for reel in self.reels]  # –°—Ä–µ–¥–Ω—è—è –ª–∏–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

    def _play_round(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ —Ä–∞—Å—á–µ—Ç –≤—ã–∏–≥—Ä—ã—à–∞"""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 4 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–∞
        if all(s == self.result_line[0] for s in self.result_line):
            payout = self.bet * self.payouts['4_of_a_kind']
            self.game_result = ('win', payout)
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 4 –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–∞
        elif self.selected_symbol and all(s == self.selected_symbol for s in self.result_line):
            payout = self.bet * self.payouts['4_selected']
            self.game_result = ('win', payout)
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 3 –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–∞
        elif self.selected_symbol and self.result_line.count(self.selected_symbol) >= 3:
            payout = self.bet * self.payouts['3_selected']
            self.game_result = ('win', payout)
        else:
            self.game_result = ('lose', -self.bet)

    def _finish_game(self):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        if self.game_result[0] == 'win':
            self._show_win_animation()
            print(Fore.GREEN + f"\n–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${self.game_result[1]:,}!")
        else:
            print(Fore.RED + "\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ —ç—Ç—É —Å—Ç–∞–≤–∫—É")

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        self.user.money += self.game_result[1]
        self.user.update_stats(*self.game_result, self.bet)

        print(Fore.MAGENTA + f"\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${self.user.money:,}")
        input(Fore.WHITE + "\n–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å...")

    def _show_win_animation(self):
        """–ü—Ä–∞–∑–¥–Ω–∏—á–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –≤—ã–∏–≥—Ä—ã—à–∞"""
        print("\n" + "=" * 50)
        print(Back.YELLOW + Fore.BLACK + "=== –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! ===")
        print(Style.RESET_ALL)

        # –ê–Ω–∏–º–∞—Ü–∏—è –º–∏–≥–∞–Ω–∏—è
        for _ in range(3):
            print(Fore.YELLOW + Back.RED + "  CONGRATULATIONS!  " + Style.RESET_ALL)
            time.sleep(0.3)
            print(Fore.RED + Back.YELLOW + "  CONGRATULATIONS!  " + Style.RESET_ALL)
            time.sleep(0.3)

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–∏–≥—Ä—ã—à–Ω–æ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
        print("\n–í—ã–∏–≥—Ä—ã—à–Ω–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è:")
        for line in range(3):
            for reel in self.reels:
                symbol = reel[line]
                color = Fore.YELLOW if symbol == self.selected_symbol else Fore.WHITE
                print(color + SYMBOLS[symbol], end="  ")
            print()

        print("=" * 50)


def main_arm(user):
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –∏–≥—Ä—É"""
    game = OneArmBandit(user)
    game.start_game()